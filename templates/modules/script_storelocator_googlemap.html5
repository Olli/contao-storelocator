
<script>
    var map;
    var markers = {
        <?php foreach( $this->entries as $entry): ?>
            "<?= $entry->id; ?>": {"id": "<?= $entry->id; ?>","pid": "<?= $entry->pid; ?>","lng": "<?= $entry->longitude; ?>","lat": "<?= $entry->latitude; ?>"},
        <?php endforeach; ?>
    };
    var markerImages = {};

    function initMapControls() {

    }

    function initMapMarker() {

        markerImages = {
            <?php foreach( $this->mapPins as $key => $value ): ?>
            "<?= $key; ?>" : {
                "url": "<?= $value; ?>",
                "size": new google.maps.Size(108, 150),
                "scaledSize": new google.maps.Size(36, 36),
                "origin": new google.maps.Point(0, 0),
                "anchor": new google.maps.Point(18, 50)
            },
            <?php endforeach; ?>
        };

        for( var id in markers ){
            addMarker(markers[id]);
        }
        fitMapToMarkers();
    }

    function addMarker(item){

        if( item.id in markers && "position" in markers[item.id] ){
            return;
        }

        if( item.pid in markerImages ) {

            var markerImage = markerImages[item.pid];
        } else {
            if( 'default' in markerImages ){
                var markerImage = markerImages['default'];
            }
        }

        marker = new google.maps.Marker({
                position: new google.maps.LatLng(item.lat, item.lng),
                map: map,
                icon: markerImage,
                draggable: false,
                data: item
            });
        markers[item.id] = marker;

    <?php if( in_array($this->mapInteraction , array("showMarkerInfo", "scrollToListElement")) ): ?>
        marker.addListener('click', function(){

            <?php if( $this->mapInteraction == "showMarkerInfo" ): ?>
            // TODO
            <?php elseif( $this->mapInteraction == "scrollToListElement" ): ?>
                document.location.hash = "#result_"+this.data.id;
            <?php endif;?>
        });
    <?php endif;?>

    }

    function fitMapToMarkers() {

        var bounds = new google.maps.LatLngBounds();
        for( var i in markers ){
           bounds.extend(markers[i].getPosition());
        }

        map.setCenter(bounds.getCenter());
        map.fitBounds(bounds);
        map.setZoom(map.getZoom()-1);

        if( map.getZoom() > 15 ){
            map.setZoom(15);
        }
    }

    <?php if($this->storelocator_show_all_stores_on_map): ?>
    function updateMarkers() {

        var bounds = map.getBounds();

        if( typeof(bounds) == "undefined" )
            return;

        var sw = bounds.getSouthWest();
        var ne = bounds.getNorthEast();

        jQuery.ajax({
            url: ''
        ,   data: {
                'action': 'getMarkers'
            ,   'fromlat': sw.lat()
            ,   'tolat': ne.lat()
            ,   'fromlng': sw.lng()
            ,   'tolng': ne.lng()
            ,   'REQUEST_TOKEN': "{{request_token}}"
            }
        ,   dataType: 'json'
        ,   type: 'GET'
        ,   async: false
        ,   success: function( response ) {

                if( response ) {

                    for( var i in response ){
                        addMarker(response[i]);
                    }
                }
            }
        });
    }
    <?php endif;?>

    function initializeGoogleMap() {

        var position = new google.maps.LatLng(<?= $this->mapLat; ?>, <?= $this->mapLng; ?>);

        var mapOptions = {
            minZoom: 5,
            maxZoom: 20,
            zoom: 8,
            center: position
        }

        map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
        map.addListener('projection_changed', updateMarkers);


<?php if($this->storelocator_show_all_stores_on_map): ?>
        map.addListener('zoom_changed', updateMarkers);
        map.addListener('dragend', updateMarkers);
        map.addListener('tilt_changed', updateMarkers);
<?php endif; ?>

        initMapMarker();
        initMapControls();
    }
    <?php if($this->loadedMapsApi): ?>
    var busyWait = function(){
        if( typeof google.maps.Map !== undefined){
            initializeGoogleMap();
        } else {
            setTimeout(busyWait,300);
        }
    };
    setTimeout(busyWait,300);
    <?php endif; ?>
</script>

<?php if(!$this->loadedMapsApi): ?>
<script src="https://maps.googleapis.com/maps/api/js?key=<?= $this->mapsKey; ?>&amp;callback=initializeGoogleMap" async defer></script>
<?php endif; ?>
